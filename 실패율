import java.util.HashMap;

class Solution {
    public int[] solution(int N, int[] stages) {
        int[] answer = new int[N];
        HashMap<Integer, Double> map = new HashMap<Integer, Double>();
        
        for(int i=1;i<=N;i++)
        {
            int stage = i;
            int incompletePlayers = 0;
            int currentStageTotalPlayers = 0;
            
            for(int j=0;j<stages.length;j++)
            {
                int player = stages[j];
                if(player == stage)
                    incompletePlayers++;
                if(player >= stage)
                    currentStageTotalPlayers++;
            }
            
            double failureRate = 0;
            
            if(incompletePlayers != 0 && currentStageTotalPlayers != 0)
            {
                failureRate = (double)incompletePlayers/ (double)currentStageTotalPlayers;
            }
            
            map.put(stage , failureRate);
        }
        
        for(int i=0;i<N;i++)
        {
            double max = -1;
            int maxkey = 0;
            for(Integer key : map.keySet()) {
                if(max < map.get(key)) {
                    max = map.get(key);
                    maxkey = key;
                }
            }
            answer[i] = maxkey;
            map.remove(maxkey);
        }
        return answer;
    }
}
